# notes:

## Hot swapping (hot code replace)
### For eclipse, run this app, add jvm argument: 
#### -javaagent:<path to >springloaded-<version>.jar
### refer
#### https://docs.spring.io/spring-boot/docs/current/reference/html/howto-hotswapping.html
#### https://github.com/spring-projects/spring-loaded
#### http://blog.netgloo.com/2014/05/21/hot-swapping-in-spring-boot-with-eclipse-sts/

# basic config
debug=false

# security

# datasource

## https://docs.spring.io/spring-boot/docs/current/reference/html/howto-database-initialization.html
spring.datasource.initialization-mode=embedded
spring.jpa.hibernate.ddl-auto=none

## https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-sql.html#boot-features-configure-datasource
## When unit testing,  if you want to make sure that each context has a separate embedded database, you should set  true.
spring.datasource.generate-unique-name=false

## enable access to h2 embedded db console
spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true

## Set the SQL Dialect to default to let Spring autodetect the different SQL Dialects of each datasource
spring.jpa.database=default

## debug sql log
### see logback-spring.xml

## default datasource, when commetted, will using embbed (e.g. h2) automatically by spring-boot
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=utf8
#spring.datasource.username=root
#spring.datasource.password=
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

## a datasource
### same as default datasource created by spring-boot automatically
spring.datasource.a.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
spring.datasource.a.username=sa
spring.datasource.a.password=
spring.datasource.a.driver-class-name=org.h2.Driver

## b datasource
spring.datasource.b.url=jdbc:mysql://192.168.144.55:3306/test?useUnicode=true&characterEncoding=utf8
spring.datasource.b.username=user
spring.datasource.b.password=user
spring.datasource.b.driver-class-name=org.mariadb.jdbc.Driver

# json
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
## beijing China
spring.jackson.time-zone=GMT+8

# logging
## see logback-spring.xml

# monitor
management.endpoints.web.expose=*
management.endpoint.health.show-details=true
management.endpoints.web.cors.allow-credentials=true

# session
## invalid when enable spring session store
server.session.cookie.name=YHSSID
## Unlike Jetty and Undertow, Tomcat only supports minute precision for session timeout. 
## Any value that is greater than zero is converted to minutes with a minimum of 1 minute.
server.session.timeout=3600
spring.session.store-type=redis
spring.session.redis.flush-mode=on-save

#redis
spring.redis.host=localhost
spring.redis.port=6379

